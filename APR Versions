let
  Site = "https://usps365.sharepoint.com/sites/FOSAppResultsWarehouse",
  Url  = Site & "/_api/web/lists/GetByTitle('APR Call')/items" &
               "?$select=Id,Versions" &
               "&$expand=Versions($select=VersionId,VersionLabel,Modified,Editor,FieldValuesAsText)" &
               "&$format=application/json;odata=minimalmetadata",

  Src  = OData.Feed(Url, null, [Implementation="2.0"]),
  Keep = Table.SelectColumns(Src, {"Id","Versions"}),

  // Expand Versions (alias inner names to avoid collisions)
  V1 = Table.ExpandTableColumn(
        Keep, "Versions",
        {"VersionId","VersionLabel","Modified","Editor","FieldValuesAsText"},
        {"VersionId","VersionLabel","VersionModified","EditorRec","FieldsRec"}
      ),

  // Editor
  V2 = Table.ExpandRecordColumn(V1, "EditorRec", {"Title","Email"}, {"EditorName","EditorEmail"}),

  // Snapshot fields (drop collisions not needed because we only selected Id + Versions)
  V3 = Table.ExpandRecordColumn(
        V2, "FieldsRec",
        {"DateofCall","DateofFollowUp","DueDate","Area","District","Office","WhoSpoke?","PersonSpeakingforSite",
         "Commitments","APRIndicator","ServiceIndicator","ServiceIndicato","StatusNew","NEW_LastEscalated","NEW_EscalationTier","MPOO"},
        {"DateofCall","DateofFollowUp","DueDate","Area","District","Office","WhoSpoke?","PersonSpeakingforSite",
         "Commitments","APRIndicator","ServiceIndicator","ServiceIndicato","StatusNew","NEW_LastEscalated","NEW_EscalationTier","MPOO"}),

  // Normalize
  Ren = Table.RenameColumns(V3, {
        {"DateofCall","DateOfCall"},
        {"DateofFollowUp","DateOfFollowUp"},
        {"DueDate","CommitmentDate"},
        {"StatusNew","Status_Switch"},
        {"NEW_LastEscalated","LastEscalated"},
        {"NEW_EscalationTier","Tier"},
        {"MPOO","MPOOView"}
      }, MissingField.Ignore),

  // Coalesce Unit, Who, Service, Indicator
  AddUnit = Table.AddColumn(Ren, "Unit", each if [Office] <> null then [Office] else null),
  AddWho  = Table.AddColumn(AddUnit, "WhoSpoke",
              each let w = try Record.Field(_, "WhoSpoke?") otherwise null,
                       p = try [PersonSpeakingforSite] otherwise null
                   in if w <> null and Text.From(w) <> "" then w else p),
  AddSvc  = Table.AddColumn(AddWho, "ServiceIndicator_std",
              each if Text.FromNullable([ServiceIndicator]) <> "" then [ServiceIndicator]
                   else if Text.FromNullable([ServiceIndicato]) <> "" then [ServiceIndicato] else null),
  AddInd  = Table.AddColumn(AddSvc, "IndicatorUnified",
              each if Text.FromNullable([APRIndicator]) <> "" then [APRIndicator] else null),

  // Types + final shape
  Types = Table.TransformColumnTypes(AddInd, {
        {"VersionModified", type datetimezone},
        {"DateOfCall", type datetime}, {"CommitmentDate", type datetime}, {"DateOfFollowUp", type datetime}
      }, "en-US"),

  SelectCols = Table.SelectColumns(Types, {
        "Id","DateOfCall","CommitmentDate","DateOfFollowUp",
        "Area","District","Unit","WhoSpoke","Commitments",
        "IndicatorUnified","ServiceIndicator_std",
        "Tier","LastEscalated","Status_Switch","MPOOView",
        "VersionId","VersionLabel","VersionModified","EditorName","EditorEmail"
      }, MissingField.Ignore),

  Final = Table.RenameColumns(SelectCols, {{"ServiceIndicator_std","ServiceIndicator"}})
in
  Final
